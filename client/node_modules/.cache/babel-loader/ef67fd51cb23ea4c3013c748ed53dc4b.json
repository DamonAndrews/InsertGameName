{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Serena\\\\OneDrive\\\\Documents\\\\GitHub\\\\Project_1\\\\InsertGameName\\\\client\\\\src\\\\pages\\\\Scores.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // Import the `useParams()` hook\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { QUERY_SCORES } from '../utils/queries';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scores = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  // const { thoughtId } = useParams();\n  // const { loading, data } = useQuery(QUERY_SCORES, {\n  //   // pass URL parameter\n  //   // variables: { thoughtId: thoughtId },\n  // });\n  // const score = data?.score || {};\n  // if (loading) {\n  //   return <div>Loading...</div>;\n  // }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top High Scores:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Return to Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Scores;\nexport default Scores;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scores\");","map":{"version":3,"names":["React","Link","Scores"],"sources":["C:/Users/Serena/OneDrive/Documents/GitHub/Project_1/InsertGameName/client/src/pages/Scores.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Import the `useParams()` hook\r\n// import { useParams } from 'react-router-dom';\r\n// import { useQuery } from '@apollo/client';\r\n\r\n// import { QUERY_SCORES } from '../utils/queries';\r\n\r\nconst Scores = () => {\r\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\r\n  // const { thoughtId } = useParams();\r\n\r\n  // const { loading, data } = useQuery(QUERY_SCORES, {\r\n  //   // pass URL parameter\r\n  //   // variables: { thoughtId: thoughtId },\r\n  // });\r\n\r\n  // const score = data?.score || {};\r\n\r\n  // if (loading) {\r\n  //   return <div>Loading...</div>;\r\n  // }\r\n  return (\r\n    <main>\r\n    <h1>Top High Scores:</h1>\r\n  <Link to=\"/\">\r\n    <button>Return to Start</button>\r\n  </Link>\r\n\r\n  </main>\r\n  );\r\n};\r\n\r\nexport default Scores;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;AACA;AACA;AAEA;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EACnB;EACA;EAEA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEF,QAAC,IAAD;MAAM,EAAE,EAAC,GAAT;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFE;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAvBD;;KAAMA,M;AAyBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}